@model ICollection<MVC.Models.ProjectListVM>
<link rel="stylesheet" href="~/css/projectCards.css" asp-append-version="true" />

@{
    ViewData["Title"] = "All Projects";
    var page = (int)ViewData["page"];
    var size = (int)ViewData["size"];
    var pages = (int)ViewData["pages"];

    ViewData["action"] = "ListPartial";
}

<div class="container p-2">
    <div class="d-flex justify-content-between mb-3">
        <div class="d-flex flex-column">
            <div class="d-flex align-items-center mb-2">
                <label for="filterBy" class="mx-3 w-100">Filter by:</label>
                <select id="filterBy" class="form-select border border-1 border-dark">
                    <option value="none" selected>None</option>
                    <option value="name">Name</option>
                    <option value="description">Description</option>
                    <option value="type">Type</option>
                </select>
            </div>
            <div class="input-group mb-2">
                <input type="text" id="filter" class="form-control" placeholder="Search..." />
                <button class="btn btn-primary" id="searchButton">Search</button>
            </div>
        </div>
	        <div class="d-flex align-items-center">
		        <label class="me-2">Show</label>
		        <select id="pageSize" class="form-select d-inline-block w-auto me-3">
			        <option value="5">5</option>
			        <option value="10" selected>10</option>
			        <option value="25">25</option>
			        <option value="50">50</option>
		        </select>Item
        </div>
    </div>
    <div class="pagination-controls mt-3">
	    <nav aria-label="Page navigation">
		    <ul class="pagination">
			    <li class="page-item @(page == 1 ? "disabled" : "")">
				    <a class="page-link" href="javascript:void(0);" id="prevPage" aria-label="Previous">
					    <span aria-hidden="true">&laquo;</span>
				    </a>
			    </li>
			    @for (var i = 1; i <= pages; i++)
			    {
				    <li class="page-item @(page == i ? "active" : "")">
					    <a class="page-link" href="javascript:void(0);" data-page="@i">@i</a>
				    </li>
			    }
			    <li class="page-item @(page == pages ? "disabled" : "")">
				    <a class="page-link" href="javascript:void(0);" id="nextPage" aria-label="Next">
					    <span aria-hidden="true">&raquo;</span>
				    </a>
			    </li>
		    </ul>
	    </nav>
    </div>
</div>

    <div id="projectsListPlaceholder">
        @await Html.PartialAsync("_ListPartial", Model)
    </div>




<div id="modalPlaceholder"></div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        $(document).ready(function () {
            var currentPage = @Html.Raw(Json.Serialize(ViewData["page"]));
            var pageSize = @Html.Raw(Json.Serialize(ViewData["size"]));
            var totalPages = @Html.Raw(Json.Serialize(ViewData["pages"]));

            var url = '@Url.Action(ViewData["action"].ToString(), new { page = "__page__", size = "__size__" })';

            function loadProjects(page, size, filterBy, filter) {
                $.ajax({
                    url: url.replace('__page__', page).replace('__size__', size),
                    type: 'GET',
                    data: { page: page, size: size, filterBy: filterBy, filter: filter },
                    success: function (data) {
                        $('#projectsListPlaceholder').html(data);
                        currentPage = page;
                        totalPages = $(data).find('.pagination').data('total-pages'); 
                        updatePaginationVisuals();
                    },
                    error: function () {
                        alert('Error loading projects.');
                    }
                });
            }

            loadProjects(currentPage, pageSize, $('#filterBy').val(), $('#filter').val());

            $('.pagination').on('click', '.page-link[data-page]', function (e) {
                e.preventDefault();
                var newPage = $(this).data('page');
                if (newPage && newPage !== currentPage) {
                    loadProjects(newPage, pageSize, $('#filterBy').val(), $('#filter').val());
                }
            });

            $('#prevPage').on('click', function (e) {
                e.preventDefault();
                if (currentPage > 1) {
                    loadProjects(currentPage - 1, pageSize, $('#filterBy').val(), $('#filter').val());
                }
            });

            $('#nextPage').on('click', function (e) {
                e.preventDefault();
                if (currentPage < totalPages) {
                    loadProjects(currentPage + 1, pageSize, $('#filterBy').val(), $('#filter').val());
                }
            });

            $('#pageSize').on('change', function () {
                pageSize = parseInt($(this).val());
                currentPage = 1;
                loadProjects(currentPage, pageSize, $('#filterBy').val(), $('#filter').val());
            });

            $('#searchButton').on('click', function () {
                currentPage = 1;
                loadProjects(currentPage, pageSize, $('#filterBy').val(), $('#filter').val());
            });

            function updatePaginationVisuals() {
                $('.pagination .page-item').removeClass('active disabled');
                $('.pagination .page-item a[data-page="' + currentPage + '"]').parent().addClass('active');
                $('#prevPage').parent().toggleClass('disabled', currentPage === 1);
                $('#nextPage').parent().toggleClass('disabled', currentPage === totalPages);
            }
        });

    </script>
}
